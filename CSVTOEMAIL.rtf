{\rtf1\ansi\ansicpg1252\cocoartf2758
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red46\green49\blue51;\red20\green67\blue174;\red246\green247\blue249;
\red24\green25\blue27;\red162\green0\blue16;\red186\green6\blue115;\red77\green80\blue85;\red18\green115\blue126;
\red97\green3\blue173;}
{\*\expandedcolortbl;;\cssrgb\c23529\c25098\c26275;\cssrgb\c9412\c35294\c73725;\cssrgb\c97255\c97647\c98039;
\cssrgb\c12549\c12941\c14118;\cssrgb\c70196\c7843\c7059;\cssrgb\c78824\c15294\c52549;\cssrgb\c37255\c38824\c40784;\cssrgb\c3529\c52157\c56863;
\cssrgb\c46275\c15294\c73333;}
\margl1440\margr1440\vieww38200\viewh19980\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\
\pard\pardeftab720\partightenfactor0
\cf3 \cb4 \strokec3 function\cf2 \strokec2  \cf5 \strokec5 exportSheetAsCSVAndEmail\cf2 \strokec2 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb4  \cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 spreadsheetId\cf2 \strokec2  = \cf6 \strokec6 \'91SPREADSHEET\'92 ID\cf2 \strokec2 ;\cb1 \
\cb4  \cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 sheetName\cf2 \strokec2  = \cf6 \strokec6 \'91NAME \'91OF TAB\cf2 \strokec2 ;\cb1 \
\cb4  \cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 recipientEmails\cf2 \strokec2  = [\cf6 \strokec6 \'91EMAIL1\'92\cf2 \strokec2 , \cf6 \strokec6 \'91EMAIL2\'92\cf2 \strokec2 ,\cf6 \strokec6 \'92E\'92MAIL3\cf2 \strokec2 ];\cb1 \
\
\
\cb4  \cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 spreadsheet\cf2 \strokec2  = \cf7 \strokec7 SpreadsheetApp\cf2 \strokec2 .\cf5 \strokec5 openById\cf2 \strokec2 (\cf5 \strokec5 spreadsheetId\cf2 \strokec2 );\cb1 \
\cb4  \cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 sheet\cf2 \strokec2  = \cf5 \strokec5 spreadsheet\cf2 \strokec2 .\cf5 \strokec5 getSheetByName\cf2 \strokec2 (\cf5 \strokec5 sheetName\cf2 \strokec2 );\cb1 \
\
\
\cb4  \cf8 \strokec8 // Get the data from the sheet\cf2 \cb1 \strokec2 \
\cb4  \cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 lastRow\cf2 \strokec2  = \cf5 \strokec5 sheet\cf2 \strokec2 .\cf5 \strokec5 getLastRow\cf2 \strokec2 ();\cb1 \
\cb4  \cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 lastColumn\cf2 \strokec2  = \cf5 \strokec5 sheet\cf2 \strokec2 .\cf5 \strokec5 getLastColumn\cf2 \strokec2 ();\cb1 \
\cb4  \cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 range\cf2 \strokec2  = \cf5 \strokec5 sheet\cf2 \strokec2 .\cf5 \strokec5 getRange\cf2 \strokec2 (\cf9 \strokec9 1\cf2 \strokec2 , \cf9 \strokec9 1\cf2 \strokec2 , \cf5 \strokec5 lastRow\cf2 \strokec2 , \cf5 \strokec5 lastColumn\cf2 \strokec2 );\cb1 \
\cb4  \cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 data\cf2 \strokec2  = \cf5 \strokec5 range\cf2 \strokec2 .\cf5 \strokec5 getValues\cf2 \strokec2 ();\cb1 \
\
\
\cb4  \cf8 \strokec8 // Modify the date format for columns A (index 0), W (index 22), and AE (index 30) in the data array\cf2 \cb1 \strokec2 \
\cb4  \cf3 \strokec3 for\cf2 \strokec2  (\cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 row\cf2 \strokec2  = \cf9 \strokec9 0\cf2 \strokec2 ; \cf5 \strokec5 row\cf2 \strokec2  < \cf5 \strokec5 data\cf2 \strokec2 .\cf5 \strokec5 length\cf2 \strokec2 ; \cf5 \strokec5 row\cf2 \strokec2 ++) \{\cb1 \
\cb4    \cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 rowData\cf2 \strokec2  = \cf5 \strokec5 data\cf2 \strokec2 [\cf5 \strokec5 row\cf2 \strokec2 ];\cb1 \
\cb4    \cf8 \strokec8 // Check if the cell value is a date\cf2 \cb1 \strokec2 \
\cb4    \cf3 \strokec3 if\cf2 \strokec2  (\cf5 \strokec5 rowData\cf2 \strokec2 [\cf9 \strokec9 0\cf2 \strokec2 ] \cf3 \strokec3 instanceof\cf2 \strokec2  \cf7 \strokec7 Date\cf2 \strokec2 ) \{\cb1 \
\cb4      \cf5 \strokec5 rowData\cf2 \strokec2 [\cf9 \strokec9 0\cf2 \strokec2 ] = \cf7 \strokec7 Utilities\cf2 \strokec2 .\cf5 \strokec5 formatDate\cf2 \strokec2 (\cf5 \strokec5 rowData\cf2 \strokec2 [\cf9 \strokec9 0\cf2 \strokec2 ], \cf7 \strokec7 Session\cf2 \strokec2 .\cf5 \strokec5 getScriptTimeZone\cf2 \strokec2 (), \cf6 \strokec6 'MM/dd/yyyy'\cf2 \strokec2 );\cb1 \
\cb4    \}\cb1 \
\cb4    \cf3 \strokec3 if\cf2 \strokec2  (\cf5 \strokec5 rowData\cf2 \strokec2 [\cf9 \strokec9 22\cf2 \strokec2 ] \cf3 \strokec3 instanceof\cf2 \strokec2  \cf7 \strokec7 Date\cf2 \strokec2 ) \{\cb1 \
\cb4      \cf5 \strokec5 rowData\cf2 \strokec2 [\cf9 \strokec9 22\cf2 \strokec2 ] = \cf7 \strokec7 Utilities\cf2 \strokec2 .\cf5 \strokec5 formatDate\cf2 \strokec2 (\cf5 \strokec5 rowData\cf2 \strokec2 [\cf9 \strokec9 22\cf2 \strokec2 ], \cf7 \strokec7 Session\cf2 \strokec2 .\cf5 \strokec5 getScriptTimeZone\cf2 \strokec2 (), \cf6 \strokec6 'MM/dd/yyyy'\cf2 \strokec2 );\cb1 \
\cb4    \}\cb1 \
\cb4    \cf3 \strokec3 if\cf2 \strokec2  (\cf5 \strokec5 rowData\cf2 \strokec2 [\cf9 \strokec9 30\cf2 \strokec2 ] \cf3 \strokec3 instanceof\cf2 \strokec2  \cf7 \strokec7 Date\cf2 \strokec2 ) \{\cb1 \
\cb4      \cf5 \strokec5 rowData\cf2 \strokec2 [\cf9 \strokec9 30\cf2 \strokec2 ] = \cf7 \strokec7 Utilities\cf2 \strokec2 .\cf5 \strokec5 formatDate\cf2 \strokec2 (\cf5 \strokec5 rowData\cf2 \strokec2 [\cf9 \strokec9 30\cf2 \strokec2 ], \cf7 \strokec7 Session\cf2 \strokec2 .\cf5 \strokec5 getScriptTimeZone\cf2 \strokec2 (), \cf6 \strokec6 'MM/dd/yyyy'\cf2 \strokec2 );\cb1 \
\cb4    \}\cb1 \
\cb4  \}\cb1 \
\
\
\cb4  \cf8 \strokec8 // Convert the modified data to CSV format\cf2 \cb1 \strokec2 \
\cb4  \cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 csvContent\cf2 \strokec2  = \cf5 \strokec5 convertToCSV\cf2 \strokec2 (\cf5 \strokec5 data\cf2 \strokec2 );\cb1 \
\
\
\cb4  \cf8 \strokec8 // Create a temporary file in Google Drive with the CSV content\cf2 \cb1 \strokec2 \
\cb4  \cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 folder\cf2 \strokec2  = \cf7 \strokec7 DriveApp\cf2 \strokec2 .\cf5 \strokec5 createFolder\cf2 \strokec2 (\cf6 \strokec6 'Temporary Folder'\cf2 \strokec2 );\cb1 \
\cb4  \cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 today\cf2 \strokec2  = \cf3 \strokec3 new\cf2 \strokec2  \cf7 \strokec7 Date\cf2 \strokec2 ();\cb1 \
\cb4  \cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 formattedDate\cf2 \strokec2  = \cf7 \strokec7 Utilities\cf2 \strokec2 .\cf5 \strokec5 formatDate\cf2 \strokec2 (\cf5 \strokec5 today\cf2 \strokec2 , \cf7 \strokec7 Session\cf2 \strokec2 .\cf5 \strokec5 getScriptTimeZone\cf2 \strokec2 (), \cf6 \strokec6 'MMddyyyy'\cf2 \strokec2 ); \cf8 \strokec8 // Change the date format here for the file name\cf2 \cb1 \strokec2 \
\cb4  \cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 fileName\cf2 \strokec2  = \cf6 \strokec6 \'91FILE\'92 NAME\cf2 \strokec2  + \cf5 \strokec5 formattedDate\cf2 \strokec2  + \cf6 \strokec6 '.csv'\cf2 \strokec2 ;\cb1 \
\cb4  \cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 file\cf2 \strokec2  = \cf5 \strokec5 folder\cf2 \strokec2 .\cf5 \strokec5 createFile\cf2 \strokec2 (\cf5 \strokec5 fileName\cf2 \strokec2 , \cf5 \strokec5 csvContent\cf2 \strokec2 , \cf7 \strokec7 MimeType\cf2 \strokec2 .\cf7 \strokec7 CSV\cf2 \strokec2 );\cb1 \
\
\
\cb4  \cf8 \strokec8 // Get the temporary file URL\cf2 \cb1 \strokec2 \
\cb4  \cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 fileUrl\cf2 \strokec2  = \cf5 \strokec5 file\cf2 \strokec2 .\cf5 \strokec5 getUrl\cf2 \strokec2 ();\cb1 \
\
\
\cb4  \cf8 \strokec8 // Send the email with the CSV file attached\cf2 \cb1 \strokec2 \
\cb4  \cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 subject\cf2 \strokec2  = \cf6 \strokec6 \'91SUBJECT \'91LINE\cf2 \strokec2 ;\cb1 \
\cb4  \cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 body\cf2 \strokec2  = \cf6 \strokec6 \'91BODY OF EMAIL.\'92\cf2 \strokec2 ;\cb1 \
\cb4  \cf7 \strokec7 MailApp\cf2 \strokec2 .\cf5 \strokec5 sendEmail\cf2 \strokec2 (\{\cb1 \
\cb4    \cf5 \strokec5 to\cf2 \strokec2 : \cf5 \strokec5 recipientEmails\cf2 \strokec2 .\cf5 \strokec5 join\cf2 \strokec2 (\cf6 \strokec6 ','\cf2 \strokec2 ),\cb1 \
\cb4    \cf5 \strokec5 subject\cf2 \strokec2 : \cf5 \strokec5 subject\cf2 \strokec2 ,\cb1 \
\cb4    \cf5 \strokec5 body\cf2 \strokec2 : \cf5 \strokec5 body\cf2 \strokec2 ,\cb1 \
\cb4    \cf5 \strokec5 attachments\cf2 \strokec2 : [\cf5 \strokec5 file\cf2 \strokec2 .\cf5 \strokec5 getAs\cf2 \strokec2 (\cf7 \strokec7 MimeType\cf2 \strokec2 .\cf7 \strokec7 CSV\cf2 \strokec2 )]\cb1 \
\cb4  \});\cb1 \
\
\
\cb4  \cf8 \strokec8 // Remove the temporary file and folder\cf2 \cb1 \strokec2 \
\cb4  \cf5 \strokec5 file\cf2 \strokec2 .\cf5 \strokec5 setTrashed\cf2 \strokec2 (\cf3 \strokec3 true\cf2 \strokec2 );\cb1 \
\cb4  \cf5 \strokec5 folder\cf2 \strokec2 .\cf5 \strokec5 setTrashed\cf2 \strokec2 (\cf3 \strokec3 true\cf2 \strokec2 );\cb1 \
\cb4 \}\cb1 \
\
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb4 \strokec8 // Define the convertToCSV function\cf2 \cb1 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf3 \cb4 \strokec3 function\cf2 \strokec2  \cf5 \strokec5 convertToCSV\cf2 \strokec2 (\cf5 \strokec5 data\cf2 \strokec2 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb4  \cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 csvContent\cf2 \strokec2  = \cf6 \strokec6 ''\cf2 \strokec2 ;\cb1 \
\
\
\cb4  \cf3 \strokec3 for\cf2 \strokec2  (\cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 row\cf2 \strokec2  = \cf9 \strokec9 0\cf2 \strokec2 ; \cf5 \strokec5 row\cf2 \strokec2  < \cf5 \strokec5 data\cf2 \strokec2 .\cf5 \strokec5 length\cf2 \strokec2 ; \cf5 \strokec5 row\cf2 \strokec2 ++) \{\cb1 \
\cb4    \cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 rowData\cf2 \strokec2  = \cf5 \strokec5 data\cf2 \strokec2 [\cf5 \strokec5 row\cf2 \strokec2 ];\cb1 \
\cb4    \cf3 \strokec3 for\cf2 \strokec2  (\cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 col\cf2 \strokec2  = \cf9 \strokec9 0\cf2 \strokec2 ; \cf5 \strokec5 col\cf2 \strokec2  < \cf5 \strokec5 rowData\cf2 \strokec2 .\cf5 \strokec5 length\cf2 \strokec2 ; \cf5 \strokec5 col\cf2 \strokec2 ++) \{\cb1 \
\cb4      \cf3 \strokec3 var\cf2 \strokec2  \cf5 \strokec5 cellValue\cf2 \strokec2  = \cf5 \strokec5 rowData\cf2 \strokec2 [\cf5 \strokec5 col\cf2 \strokec2 ];\cb1 \
\
\
\
\cb4      \cf8 \strokec8 // Escape double quotes with two double quotes\cf2 \cb1 \strokec2 \
\cb4      \cf3 \strokec3 if\cf2 \strokec2  (\cf3 \strokec3 typeof\cf2 \strokec2  \cf5 \strokec5 cellValue\cf2 \strokec2  === \cf6 \strokec6 'string'\cf2 \strokec2 ) \{\cb1 \
\cb4        \cf5 \strokec5 cellValue\cf2 \strokec2  = \cf5 \strokec5 cellValue\cf2 \strokec2 .\cf5 \strokec5 replace\cf2 \strokec2 (\cf10 \strokec10 /"/\cf3 \strokec3 g\cf2 \strokec2 , \cf6 \strokec6 '""'\cf2 \strokec2 );\cb1 \
\cb4      \}\cb1 \
\
\
\cb4      \cf8 \strokec8 // Enclose cell value in double quotes if it contains a comma, double quote, or line break\cf2 \cb1 \strokec2 \
\cb4      \cf3 \strokec3 if\cf2 \strokec2  (\cf10 \strokec10 /[,\\"\\n]/\cf2 \strokec2 .\cf5 \strokec5 test\cf2 \strokec2 (\cf5 \strokec5 cellValue\cf2 \strokec2 )) \{\cb1 \
\cb4        \cf5 \strokec5 cellValue\cf2 \strokec2  = \cf6 \strokec6 '"'\cf2 \strokec2  + \cf5 \strokec5 cellValue\cf2 \strokec2  + \cf6 \strokec6 '"'\cf2 \strokec2 ;\cb1 \
\cb4      \}\cb1 \
\
\
\cb4      \cf5 \strokec5 csvContent\cf2 \strokec2  += \cf5 \strokec5 cellValue\cf2 \strokec2  + \cf6 \strokec6 ','\cf2 \strokec2 ;\cb1 \
\cb4    \}\cb1 \
\
\
\cb4    \cf5 \strokec5 csvContent\cf2 \strokec2  += \cf6 \strokec6 '\\n'\cf2 \strokec2 ;\cb1 \
\cb4  \}\cb1 \
\
\
\cb4  \cf3 \strokec3 return\cf2 \strokec2  \cf5 \strokec5 csvContent\cf2 \strokec2 ;\cb1 \
\cb4 \}\cb1 \
\
\
}